local function addLightingEffects()
    local lighting = game:GetService("Lighting")
    local bloom = lighting:FindFirstChildOfClass("BloomEffect") or Instance.new("BloomEffect", lighting)
    bloom.Intensity = 0.3
    bloom.Size = 40
    bloom.Threshold = 0.05
    
    local colorCorrection = lighting:FindFirstChildOfClass("ColorCorrectionEffect") or Instance.new("ColorCorrectionEffect", lighting)
    colorCorrection.TintColor = Color3.new(1, 0.9, 0.8)
    colorCorrection.Brightness = 0.01
    colorCorrection.Contrast = 0.05
    colorCorrection.Saturation = -0.1
    
    local blur = lighting:FindFirstChildOfClass("BlurEffect") or Instance.new("BlurEffect", lighting)
    blur.Name = "OxygenBlur"
    blur.Size = 0
end

addLightingEffects()

local sound = Instance.new("Sound")
sound.Name = "BackgroundMusic"
sound.SoundId = "rbxassetid://1838667764"
sound.Looped = true
sound.Volume = 0.5
sound.Parent = workspace
sound:Play()

local function paintObjectSoftRed(object)
    if object:IsA("BasePart") then
        object.Color = Color3.new(0.5, 0.3, 0.3)
    end
end

for _, object in ipairs(workspace:GetDescendants()) do
    if object:IsA("BasePart") and (object.Name == "Carpet" or object.Name == "CarpetLight") then
        paintObjectSoftRed(object)
    end
end

workspace.DescendantAdded:Connect(function(descendant)
    if (descendant:IsA("Model") and descendant.Name == "Rug") or
       (descendant:IsA("BasePart") and (descendant.Name == "Carpet" or descendant.Name == "CarpetLight")) then
        paintObjectSoftRed(descendant)
    end
end)

local function paintWallAndWallpaper(part)
    if part:IsA("BasePart") and part.Name == "Wall" then
        part.BrickColor = BrickColor.new("White")
        part.Material = Enum.Material.SmoothPlastic
        
        local wallpaper = part:FindFirstChild("Wallpaper")
        if wallpaper and wallpaper:IsA("Part") then
            wallpaper.Color = Color3.fromRGB(255, 81, 81)
            wallpaper.Transparency = 0.7
        end
    end
end

for _, object in ipairs(workspace:GetDescendants()) do
    paintWallAndWallpaper(object)
end

workspace.DescendantAdded:Connect(function(descendant)
    paintWallAndWallpaper(descendant)
end)

local function processWindowModel(windowModel, isTall)
    for _, descendant in ipairs(windowModel:GetDescendants()) do
        if descendant:IsA("Sound") then
            descendant:Destroy()
        end
    end
    
    local skybox = windowModel:FindFirstChild("Skybox", true)
    if skybox then
        if skybox:IsA("MeshPart") then
            skybox.Color = Color3.fromRGB(86, 86, 92)
        elseif skybox:IsA("Model") then
            for _, part in ipairs(skybox:GetDescendants()) do
                if part:IsA("MeshPart") then
                    part.Color = Color3.fromRGB(86, 86, 92)
                end
            end
        end
    end
    
    local rainParticle = windowModel:FindFirstChild("RainParticle", true)
    if rainParticle and rainParticle:IsA("ParticleEmitter") then
        if isTall then
            rainParticle.Rate = 3
            rainParticle.Lifetime = NumberRange.new(10, 10)
            rainParticle.Speed = NumberRange.new(3, 3)
        else
            rainParticle.Rate = 1.5
            rainParticle.Lifetime = NumberRange.new(6, 6)
            rainParticle.Speed = NumberRange.new(1, 1)
        end
        rainParticle.Texture = "rbxassetid://18448650142"
    end
    
    for _, descendant in ipairs(windowModel:GetDescendants()) do
        if descendant:IsA("ParticleEmitter") and descendant.Name ~= "RainParticle" then
            descendant:Destroy()
        end
    end
end

local currentRooms = workspace:FindFirstChild("CurrentRooms")
if currentRooms and currentRooms:IsA("Folder") then
    for _, model in ipairs(currentRooms:GetDescendants()) do
        if model:IsA("Model") then
            if model.Name == "Window_Tall" then
                processWindowModel(model, true)
            elseif model.Name == "Window" then
                processWindowModel(model, false)
            end
        end
    end
    
    currentRooms.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Model") then
            if descendant.Name == "Window_Tall" then
                processWindowModel(descendant, true)
            elseif descendant.Name == "Window" then
                processWindowModel(descendant, false)
            end
        end
    end)
end
